"""–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º GigaChat."""

# –ò–º–ø–æ—Ä—Ç—ã
import os
import logging
from datetime import datetime
from Source.agent import agent
from Source.tools import analyze_file_alert, check_token_status

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
def setup_logging():
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∏–∞–ª–æ–≥–æ–≤ —Å –±–æ—Ç–æ–º.
    """
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    log_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'Logs')
    os.makedirs(log_dir, exist_ok=True)
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –ª–æ–≥–∞ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
    current_time = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
    log_file = os.path.join(log_dir, f'chat_log_{current_time}.log')
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
    logger = logging.getLogger('chat_logger')
    logger.setLevel(logging.INFO)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
    file_handler = logging.FileHandler(log_file, encoding='utf-8')
    file_handler.setLevel(logging.INFO)
    
    # –§–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è –ª–æ–≥–æ–≤
    formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
    file_handler.setFormatter(formatter)
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫ –ª–æ–≥–≥–µ—Ä—É
    logger.addHandler(file_handler)
    
    return logger

def select_alert_file():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.
    
    Returns:
        str: –ü—É—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É.
    """
    project_dir = os.path.dirname(os.path.abspath(__file__))
    
    # –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∞–ª–µ—Ä—Ç–æ–≤
    alert_files = {
        '1': {
            'name': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–ª–µ—Ä—Ç',
            'path': os.path.join(project_dir, 'TestAlerts/one_line_alert.txt')
        },
        '2': {
            'name': '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã',
            'path': os.path.join(project_dir, 'TestAlerts/multiple_alerts.txt')
        },
        '3': {
            'name': '–ü—Ä–æ–±–ª–µ–º–Ω—ã–π –∞–ª–µ—Ä—Ç',
            'path': os.path.join(project_dir, 'TestAlerts/one_line_problematic_alert.txt')
        }
    }
    
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –∞–ª–µ—Ä—Ç–æ–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:")
    for key, file_info in alert_files.items():
        print(f"{key}. {file_info['name']} ({os.path.basename(file_info['path'])})")
    
    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ (1-3) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞: ")
        
        if not choice:  # –ï—Å–ª–∏ –ø—É—Å—Ç–æ–π –≤–≤–æ–¥, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–ª–µ—Ä—Ç
            return alert_files['1']['path']
        
        if choice in alert_files:
            return alert_files[choice]['path']
        else:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3.")

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—â–µ–Ω–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º
def chat(thread_id: str):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º.
    """
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logger = setup_logging()
    logger.info(f"–°–µ—Å—Å–∏—è —á–∞—Ç–∞ –Ω–∞—á–∞—Ç–∞ —Å thread_id: {thread_id}")
    
    # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –±—ã–ª –ª–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∞–ª–µ—Ä—Ç –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
    alert_analyzed = False
    last_alert_file = ""
    
    config = {"configurable": {"thread_id": thread_id}}
    welcome_message = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –æ–±—â–µ–Ω–∏—è —Å GigaChat!"
    instructions = """–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.
    
üìÑ –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–æ–≤ —Å –∞–ª–µ—Ä—Ç–∞–º–∏ –≤–≤–µ–¥–∏—Ç–µ '—Ñ–∞–π–ª' –∏–ª–∏ '–∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞'
üìã –ü–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ –º–æ–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º —á–µ—Ä–µ–∑ '–ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–ª–µ—Ä—Ç'
üîÑ –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–ª–µ—Ä—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ '–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑'
üîë –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç–æ–∫–µ–Ω–æ–≤ GigaChat –≤–≤–µ–¥–∏—Ç–µ '—Ç–æ–∫–µ–Ω—ã' –∏–ª–∏ '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω—ã'"""
    
    print(welcome_message)
    print(instructions)
    logger.info(f"–ë–æ—Ç: {welcome_message}")
    logger.info(f"–ë–æ—Ç: {instructions}")
    
    while True:
        try:
            user_input = input("\n>>: ")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_input}")
            
            if user_input.lower() == "exit":
                farewell_message = "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                print(farewell_message)
                logger.info(f"–ë–æ—Ç: {farewell_message}")
                logger.info("–°–µ—Å—Å–∏—è —á–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                break
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–æ–≤ GigaChat
            if user_input.lower() in ["—Ç–æ–∫–µ–Ω—ã", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω—ã", "—Å—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–æ–≤", "—Ç–æ–∫–µ–Ω", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω"]:
                logger.info("–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ check_token_status –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞")
                try:
                    print("\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ç–æ–∫–µ–Ω–æ–≤ GigaChat:")
                    logger.info("–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ —Ç–æ–∫–µ–Ω–æ–≤ GigaChat")
                    
                    result = check_token_status.invoke("")
                    print("ü§ñ :", result)
                    logger.info(f"–ë–æ—Ç (–ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ check_token_status): —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω")
                    
                    continue
                except Exception as e:
                    error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ check_token_status: {str(e)}"
                    logger.error(error_msg, exc_info=True)
                    print("ü§ñ :", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–æ–≤: {str(e)}")
                    continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –∞–ª–µ—Ä—Ç–∞
            if user_input.lower() in ["–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–ª–µ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞", "–∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞",
                                      "–ø—Ä–æ—á–∏—Ç–∞—Ç—å one_line_alert.txt", "–∞–Ω–∞–ª–∏–∑ one_line_alert", "—Ñ–∞–π–ª"]:
                logger.info("–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ analyze_file_alert –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞")
                try:
                    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª –∞–ª–µ—Ä—Ç–∞
                    selected_file = select_alert_file()
                    
                    print(f"\nüìÑ –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: {os.path.basename(selected_file)}")
                    logger.info(f"–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {selected_file}")
                    
                    result = analyze_file_alert.invoke(selected_file)
                    print("ü§ñ :", result)
                    logger.info(f"–ë–æ—Ç (–ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤): {result}")
                    
                    # –ß–∏—Ç–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                    original_alert_text = ""
                    try:
                        with open(selected_file, 'r', encoding='utf-8') as alert_file:
                            original_alert_text = alert_file.read()
                            alert_analyzed = True  # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∞–ª–µ—Ä—Ç –±—ã–ª –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
                            last_alert_file = selected_file
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞: {str(e)}")
                        original_alert_text = "–¢–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å"
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –∞–ª–µ—Ä—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
                    save_to_context = f"""–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∞–ª–µ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞ {os.path.basename(selected_file)}. 

–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞:
```
{original_alert_text}
```

–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:
{result}"""
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
                    try:
                        response = agent.invoke({"messages": [("user", "–°–æ—Ö—Ä–∞–Ω–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–ª–µ—Ä—Ç–µ:"), ("assistant", save_to_context)]}, config=config)
                        logger.info("–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º")
                        print("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–ª–µ—Ä—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —ç—Ç–æ–º—É –∞–ª–µ—Ä—Ç—É.")
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞: {str(e)}", exc_info=True)
                        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–ª–µ—Ä—Ç–µ –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞.")
                    
                    continue
                except Exception as e:
                    error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ analyze_file_alert: {str(e)}"
                    logger.error(error_msg, exc_info=True)
                    print("ü§ñ :", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞: {str(e)}")
                    continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞–ª–µ—Ä—Ç–∞
            if user_input.lower() in ["–ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", "–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", "–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑"]:
                if alert_analyzed and last_alert_file:
                    logger.info(f"–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–ª–µ—Ä—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞: {last_alert_file}")
                    try:
                        print(f"\nüìÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: {os.path.basename(last_alert_file)}")
                        
                        result = analyze_file_alert.invoke(last_alert_file)
                        print("ü§ñ :", result)
                        logger.info(f"–ë–æ—Ç (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤): {result}")
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–ª–µ—Ä—Ç–µ
                        try:
                            with open(last_alert_file, 'r', encoding='utf-8') as alert_file:
                                original_alert_text = alert_file.read()
                        except Exception as e:
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞: {str(e)}")
                            original_alert_text = "–¢–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å"
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞–ª–µ—Ä—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–∏–∞–ª–æ–≥–∞
                        save_to_context = f"""–Ø –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∞–ª–µ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞ {os.path.basename(last_alert_file)}. 

–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞:
```
{original_alert_text}
```

–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:
{result}"""
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
                        try:
                            response = agent.invoke({"messages": [("user", "–°–æ—Ö—Ä–∞–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–ª–µ—Ä—Ç–µ:"), ("assistant", save_to_context)]}, config=config)
                            logger.info("–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º")
                            print("üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–ª–µ—Ä—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞.")
                        except Exception as e:
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞: {str(e)}", exc_info=True)
                            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–ª–µ—Ä—Ç–µ –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞.")
                        
                        continue
                    except Exception as e:
                        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞: {str(e)}"
                        logger.error(error_msg, exc_info=True)
                        print("ü§ñ :", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞: {str(e)}")
                        continue
                else:
                    print("ü§ñ : –í—ã –µ—â–µ –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞ –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏. –í–≤–µ–¥–∏—Ç–µ '—Ñ–∞–π–ª' –∏–ª–∏ '–∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞' –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.")
                    logger.info("–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω - –∞–ª–µ—Ä—Ç –Ω–µ –±—ã–ª –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                    continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–ª–µ—Ä—Ç–µ
            if user_input.lower() in ["–ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–ª–µ—Ä—Ç", "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–ª–µ—Ä—Ç–µ", "—á—Ç–æ —Ç–∞–º —Å –∞–ª–µ—Ä—Ç–æ–º", "–¥–∞–Ω–Ω—ã–µ –∞–ª–µ—Ä—Ç–∞"]:
                logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–ª–µ—Ä—Ç–µ")
                if alert_analyzed:
                    safe_input = "–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–ª–µ—Ä—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ø–∞–º—è—Ç–∏. –ö–∞–∫–∏–µ —Ç–∞–º –±—ã–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, HTTP –∫–æ–¥—ã, —Å—Ç–∞—Ç—É—Å—ã?"
                else:
                    print("ü§ñ : –í—ã –µ—â–µ –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞ –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏. –í–≤–µ–¥–∏—Ç–µ '—Ñ–∞–π–ª' –∏–ª–∏ '–∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞' –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.")
                    logger.info("–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–ª–µ—Ä—Ç–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω - –∞–ª–µ—Ä—Ç –Ω–µ –±—ã–ª –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                    continue
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–º–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –±–æ—Ç—É
            logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–æ—Ç—É...")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É –≤–≤–æ–¥–∞
            safe_input = user_input.encode('utf-8', errors='replace').decode('utf-8')
            
            # –í—ã–∑–æ–≤ –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
            response = agent.invoke({"messages": [("user", safe_input)]}, config=config)
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
            bot_response = response["messages"][-1].content
            
            # –í—ã–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            print("ü§ñ :", bot_response)
            logger.info(f"–ë–æ—Ç: {bot_response}")
            
        except KeyboardInterrupt:
            interrupt_message = "\n–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
            print(interrupt_message)
            logger.warning("–°–µ—Å—Å–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (KeyboardInterrupt)")
            logger.info(f"–ë–æ—Ç: {interrupt_message}")
            break
        except Exception as e:
            error_message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}"
            print(error_message)
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}", exc_info=True)

if __name__ == "__main__":
    chat('SberAX_consultant')