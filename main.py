"""–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º GigaChat."""

# –ò–º–ø–æ—Ä—Ç—ã
import os
import logging
from datetime import datetime
from src.core.agent import agent

# –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
try:
    from src.tools.alert_tools import analyze_file_alert
    from src.tools.gigachat_tools import check_token_status
except ImportError:
    # –†–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    from src.tools.tools import analyze_file_alert
    from src.tools.tools import check_token_status

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from config import get_settings
from config.logging_config import setup_chat_logger
from config.settings import get_alert_file_path

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
from config.exceptions import (
    AIAgentError, FileOperationError, GigaChatAPIError, DataProcessingError,
    format_exception, safe_execute
)


# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—â–µ–Ω–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º
def chat(thread_id: str):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –∞–≥–µ–Ω—Ç–æ–º.
    """
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    logger = setup_chat_logger()
    logger.info(f"–°–µ—Å—Å–∏—è —á–∞—Ç–∞ –Ω–∞—á–∞—Ç–∞ —Å thread_id: {thread_id}")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    settings = get_settings()
    
    # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –±—ã–ª –ª–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∞–ª–µ—Ä—Ç –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
    alert_analyzed = False
    last_alert_file = ""
    
    config = {"configurable": {"thread_id": thread_id}}
    welcome_message = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª –æ–±—â–µ–Ω–∏—è —Å GigaChat!"
    instructions = """–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.
    
üìÑ –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–æ–≤ —Å –∞–ª–µ—Ä—Ç–∞–º–∏ –≤–≤–µ–¥–∏—Ç–µ '—Ñ–∞–π–ª' –∏–ª–∏ '–∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞'
üìã –ü–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ –º–æ–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º —á–µ—Ä–µ–∑ '–ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–ª–µ—Ä—Ç'
üîÑ –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–ª–µ—Ä—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ '–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑'
üîë –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç–æ–∫–µ–Ω–æ–≤ GigaChat –≤–≤–µ–¥–∏—Ç–µ '—Ç–æ–∫–µ–Ω—ã' –∏–ª–∏ '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω—ã'"""
    
    # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–∏–Ω —Ä–∞–∑ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–≥
    print(welcome_message)
    print(instructions)
    logger.info(f"–ë–æ—Ç: {welcome_message}")
    logger.info(f"–ë–æ—Ç: {instructions}")
    
    while True:
        try:
            user_input = input("\n>>: ")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_input}")
            
            if user_input.lower() == "exit":
                farewell_message = "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                print(farewell_message)
                logger.info(f"–ë–æ—Ç: {farewell_message}")
                logger.info("–°–µ—Å—Å–∏—è —á–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                break
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–æ–≤ GigaChat
            if user_input.lower() in ["—Ç–æ–∫–µ–Ω—ã", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω—ã", "—Å—Ç–∞—Ç—É—Å —Ç–æ–∫–µ–Ω–æ–≤", "—Ç–æ–∫–µ–Ω", "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω"]:
                logger.info("–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ check_token_status –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞")
                
                def check_token_handler():
                    print("\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ç–æ–∫–µ–Ω–æ–≤ GigaChat:")
                    logger.info("–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ —Ç–æ–∫–µ–Ω–æ–≤ GigaChat")
                    
                    result = check_token_status.invoke("")
                    print("ü§ñ :", result)
                    logger.info(f"–ë–æ—Ç (–ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ check_token_status): —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω")
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º safe_execute –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
                result = safe_execute(
                    check_token_handler,
                    error_message="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–æ–≤ GigaChat",
                    logger=logger,
                    expected_exceptions=[GigaChatAPIError]
                )
                
                if isinstance(result, str) and result.startswith("‚ùå"):
                    print("ü§ñ :", result)
                    
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –∞–ª–µ—Ä—Ç–∞
            if user_input.lower() in ["–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞–ª–µ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞", "–∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞",
                                      "–∞–Ω–∞–ª–∏–∑ –∞–ª–µ—Ä—Ç–∞", "–∞–ª–µ—Ä—Ç", "—Ñ–∞–π–ª"]:
                logger.info("–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ analyze_file_alert –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞")
                
                def analyze_alert_handler():
                    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª –∞–ª–µ—Ä—Ç–∞
                    selected_file = select_alert_file()
                    
                    print(f"\nüìÑ –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: {os.path.basename(selected_file)}")
                    logger.info(f"–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {selected_file}")
                    
                    result = analyze_file_alert.invoke(selected_file)
                    
                    # –ß–∏—Ç–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                    original_alert_text = ""
                    try:
                        with open(selected_file, 'r', encoding='utf-8') as alert_file:
                            original_alert_text = alert_file.read()
                            nonlocal alert_analyzed, last_alert_file
                            alert_analyzed = True  # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∞–ª–µ—Ä—Ç –±—ã–ª –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
                            last_alert_file = selected_file
                    except Exception as e:
                        error = FileOperationError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞: {str(e)}")
                        logger.error(format_exception(error))
                        original_alert_text = "–¢–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å"
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –∞–ª–µ—Ä—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
                    save_to_context = f"""–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∞–ª–µ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞ {os.path.basename(selected_file)}. 

–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞:
```
{original_alert_text}
```

–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:
{result}"""
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
                    try:
                        response = agent.invoke({"messages": [("user", "–°–æ—Ö—Ä–∞–Ω–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–ª–µ—Ä—Ç–µ:"), ("assistant", save_to_context)]}, config=config)
                        logger.info("–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º")
                        print("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–ª–µ—Ä—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —ç—Ç–æ–º—É –∞–ª–µ—Ä—Ç—É.")
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞: {str(e)}", exc_info=True)
                        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–ª–µ—Ä—Ç–µ –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞.")
                    
                    print("ü§ñ :", result)
                    return result
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º safe_execute –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
                result = safe_execute(
                    analyze_alert_handler,
                    error_message="–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞",
                    logger=logger,
                    expected_exceptions=[FileOperationError, DataProcessingError]
                )
                
                if isinstance(result, str) and result.startswith("‚ùå"):
                    print("ü§ñ :", result)
                    
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞–ª–µ—Ä—Ç–∞
            if user_input.lower() in ["–ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", "–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", "–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑"]:
                if alert_analyzed and last_alert_file:
                    logger.info(f"–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–ª–µ—Ä—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞: {last_alert_file}")
                    
                    def reanalyze_alert_handler():
                        print(f"\nüìÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: {os.path.basename(last_alert_file)}")
                        
                        result = analyze_file_alert.invoke(last_alert_file)
                        print("ü§ñ :", result)
                        logger.info(f"–ë–æ—Ç (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤): {result}")
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–ª–µ—Ä—Ç–µ
                        try:
                            with open(last_alert_file, 'r', encoding='utf-8') as alert_file:
                                original_alert_text = alert_file.read()
                        except Exception as e:
                            error = FileOperationError(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞: {str(e)}")
                            logger.error(format_exception(error))
                            original_alert_text = "–¢–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å"
                        
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞–ª–µ—Ä—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–∏–∞–ª–æ–≥–∞
                        save_to_context = f"""–Ø –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∞–ª–µ—Ä—Ç –∏–∑ —Ñ–∞–π–ª–∞ {os.path.basename(last_alert_file)}. 

–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∞–ª–µ—Ä—Ç–∞:
```
{original_alert_text}
```

–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:
{result}"""
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
                        try:
                            response = agent.invoke({"messages": [("user", "–°–æ—Ö—Ä–∞–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–ª–µ—Ä—Ç–µ:"), ("assistant", save_to_context)]}, config=config)
                            logger.info("–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º")
                            print("üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–ª–µ—Ä—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞.")
                        except Exception as e:
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞: {str(e)}", exc_info=True)
                            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–ª–µ—Ä—Ç–µ –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞.")
                        
                        return result
                    
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º safe_execute –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
                    result = safe_execute(
                        reanalyze_alert_handler,
                        error_message="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞",
                        logger=logger,
                        expected_exceptions=[FileOperationError, DataProcessingError]
                    )
                    
                    if isinstance(result, str) and result.startswith("‚ùå"):
                        print("ü§ñ :", result)
                        
                    continue
                else:
                    print("ü§ñ : –í—ã –µ—â–µ –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞ –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏. –í–≤–µ–¥–∏—Ç–µ '—Ñ–∞–π–ª' –∏–ª–∏ '–∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞' –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.")
                    logger.info("–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω - –∞–ª–µ—Ä—Ç –Ω–µ –±—ã–ª –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                    continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–ª–µ—Ä—Ç–µ
            if user_input.lower() in ["–ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–ª–µ—Ä—Ç", "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–ª–µ—Ä—Ç–µ", "—á—Ç–æ —Ç–∞–º —Å –∞–ª–µ—Ä—Ç–æ–º", "–¥–∞–Ω–Ω—ã–µ –∞–ª–µ—Ä—Ç–∞"]:
                logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–ª–µ—Ä—Ç–µ")
                if alert_analyzed:
                    def get_alert_info_handler():
                        chat_request = f"–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∞–ª–µ—Ä—Ç–µ. –ö–∞–∫–∞—è –±—ã–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞, –∏ –≤ —á–µ–º –µ–µ –ø—Ä–∏—á–∏–Ω–∞? –ü—Ä–µ–¥–ª–æ–∂–∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è."
                        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞–≥–µ–Ω—Ç—É –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–ª–µ—Ä—Ç–µ: {chat_request}")
                        
                        response = agent.invoke({"messages": [("user", chat_request)]}, config=config)
                        
                        if "output" in response:
                            bot_response = response["output"]
                            print("ü§ñ :", bot_response)
                            logger.info(f"–ë–æ—Ç: {bot_response}")
                            return bot_response
                        else:
                            error_message = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–ª–µ—Ä—Ç–µ"
                            logger.warning(error_message)
                            raise AIAgentError(error_message)
                    
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º safe_execute –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
                    result = safe_execute(
                        get_alert_info_handler,
                        error_message="–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–ª–µ—Ä—Ç–µ",
                        logger=logger,
                        expected_exceptions=[AIAgentError]
                    )
                    
                    if isinstance(result, str) and result.startswith("‚ùå"):
                        print("ü§ñ : –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞.")
                        
                    continue
                else:
                    print("ü§ñ : –í—ã –µ—â–µ –Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞ –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏. –í–≤–µ–¥–∏—Ç–µ '—Ñ–∞–π–ª' –∏–ª–∏ '–∞–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞' –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∞–ª–∏–∑–∞.")
                    logger.info("–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–ª–µ—Ä—Ç–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω - –∞–ª–µ—Ä—Ç –Ω–µ –±—ã–ª –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                    continue
            
            # –û–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –∞–≥–µ–Ω—Ç—É
            def chat_with_agent_handler():
                logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞–≥–µ–Ω—Ç—É: {user_input}")
                response = agent.invoke({"messages": [("user", user_input)]}, config=config)
                
                if "output" in response:
                    bot_response = response["output"]
                    print("ü§ñ :", bot_response)
                    logger.info(f"–ë–æ—Ç: {bot_response}")
                    return bot_response
                else:
                    error_message = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞"
                    logger.warning(error_message)
                    raise AIAgentError(error_message)
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º safe_execute –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
            result = safe_execute(
                chat_with_agent_handler,
                error_message="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞",
                logger=logger,
                expected_exceptions=[AIAgentError]
            )
            
            if isinstance(result, str) and result.startswith("‚ùå"):
                print("ü§ñ : –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞.")
                
        except KeyboardInterrupt:
            logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ—Ä–≤–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é Ctrl+C")
            print("\n\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
            break
        except Exception as e:
            error_msg = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {str(e)}"
            logger.error(error_msg, exc_info=True)
            print(f"\n\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É.")


def select_alert_file():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –∞–ª–µ—Ä—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.
    
    Returns:
        str: –ü—É—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É.
        
    Raises:
        FileOperationError: –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ–∞–π–ª–∞–º–∏ –∞–ª–µ—Ä—Ç–æ–≤
    """
    project_dir = os.path.dirname(os.path.abspath(__file__))
    settings = get_settings()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –∞–ª–µ—Ä—Ç–∞–º–∏
    alerts_dir = os.path.join(project_dir, 'TestAlerts')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not os.path.exists(alerts_dir):
        error_message = f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∞–ª–µ—Ä—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {alerts_dir}"
        logger.error(error_message)
        raise FileOperationError(error_message)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ .txt –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ TestAlerts
    alert_files_dict = {}
    alert_file_index = 1
    
    try:
        for filename in sorted(os.listdir(alerts_dir)):
            if filename.endswith('.txt'):
                file_path = os.path.join(alerts_dir, filename)
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∞–ª–µ—Ä—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
                file_type = "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–ª–µ—Ä—Ç"
                if "multiple" in filename:
                    file_type = "–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã"
                elif "problematic" in filename:
                    file_type = "–ü—Ä–æ–±–ª–µ–º–Ω—ã–π –∞–ª–µ—Ä—Ç"
                elif "three" in filename:
                    file_type = "–¢—Ä–∏ –∞–ª–µ—Ä—Ç–∞"
                elif "sample" in filename:
                    file_type = "–û–±—Ä–∞–∑–µ—Ü –∞–ª–µ—Ä—Ç–∞"
                
                alert_files_dict[str(alert_file_index)] = {
                    'name': file_type,
                    'path': file_path
                }
                alert_file_index += 1
    except Exception as e:
        error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –∞–ª–µ—Ä—Ç–∞–º–∏: {str(e)}"
        logger.error(error_message)
        raise FileOperationError(error_message)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –∞–ª–µ—Ä—Ç–æ–≤
    if not alert_files_dict:
        error_message = f"–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {alerts_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –∞–ª–µ—Ä—Ç–æ–≤ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .txt"
        logger.error(error_message)
        raise FileOperationError(error_message)
    
    print("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –∞–ª–µ—Ä—Ç–æ–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:")
    for key, file_info in alert_files_dict.items():
        print(f"{key}. {file_info['name']} ({os.path.basename(file_info['path'])})")
    
    while True:
        choice = input(f"\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞ (1-{len(alert_files_dict)}) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –∞–ª–µ—Ä—Ç–∞: ")
        
        if not choice:  # –ï—Å–ª–∏ –ø—É—Å—Ç–æ–π –≤–≤–æ–¥, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª –≤ —Å–ø–∏—Å–∫–µ
            return alert_files_dict['1']['path']
        
        if choice in alert_files_dict:
            return alert_files_dict[choice]['path']
        else:
            print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(alert_files_dict)}.")


if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ AI-–∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∞–ª–µ—Ä—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è —Å–µ—Å—Å–∏–∏
    session_id = datetime.now().strftime('session_%Y%m%d_%H%M%S')
    
    try:
        chat(session_id)
    except Exception as e:
        # –ü–æ–ª—É—á–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        logger = setup_chat_logger()
        logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {str(e)}", exc_info=True)
        print(f"\n\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {str(e)}")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")